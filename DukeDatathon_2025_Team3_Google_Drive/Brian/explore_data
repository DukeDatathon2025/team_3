{"cells":[{"cell_type":"code","source":["# prompt: I have data files in Drive in \"DukeDatathon_2025_Team3/Brian/files/'. I want to load these in and create a dictionary where the key is the name of the file and the value is the df after loading in. fyi this folder is shared with me\n","\n","from google.colab import drive\n","import pandas as pd\n","import os\n","\n","# Mount Google Drive\n","drive.mount('/content/drive')\n","\n","# Specify the path to your data files\n","data_dir = '/content/drive/MyDrive/DukeDatathon_2025_Team3/Brian/files/'\n","\n","# Create an empty dictionary to store the dataframes\n","data_dict = {}\n","\n","# Iterate through all files in the specified directory\n","for filename in os.listdir(data_dir):\n","    # Check if the file is a CSV file\n","    if filename.endswith('.csv'):\n","      try:\n","        # Construct the full file path\n","        filepath = os.path.join(data_dir, filename)\n","\n","        # Load the CSV file into a pandas DataFrame\n","        df = pd.read_csv(filepath)\n","\n","        # Add the DataFrame to the dictionary with the filename (without extension) as the key\n","        data_dict[filename[:-4]] = df\n","        print(f\"Loaded {filename} into data_dict\")\n","      except Exception as e:\n","        print(f\"Error loading {filename}: {e}\")\n","    #Handle other file types here if needed (e.g., Excel)\n","    elif filename.endswith(('.xls', '.xlsx')):\n","      try:\n","        filepath = os.path.join(data_dir, filename)\n","        df = pd.read_excel(filepath)\n","        data_dict[filename[:-4]] = df\n","        print(f\"Loaded {filename} into data_dict\")\n","      except Exception as e:\n","        print(f\"Error loading {filename}: {e}\")\n","    else:\n","      print(f\"Skipping {filename} - unsupported file format\")\n","\n","# Now you can access each DataFrame using its filename (without extension) as the key\n","# For example:\n","# if 'your_file_name' in data_dict:\n","#   df = data_dict['your_file_name']\n","#   print(df.head())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XcwGtJhsM6JV","executionInfo":{"status":"ok","timestamp":1745706644047,"user_tz":240,"elapsed":47998,"user":{"displayName":"Brian Lerner","userId":"16362064343865306362"}},"outputId":"c677544c-ec2c-413e-e2a6-20b6c51a5f49"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","Loaded df_sofa.csv into data_dict\n","Loaded df_sepsis3.csv into data_dict\n","Loaded df_age.csv into data_dict\n","Loaded df_charlson.csv into data_dict\n","Loaded df_patients.csv into data_dict\n","Loaded df_admissions.csv into data_dict\n"]}]},{"cell_type":"code","source":["for df_name, df in data_dict.items():\n","  print(f\"DataFrame Name: {df_name}\")\n","  print(f\"Shape: {df.shape}\")\n","  print(f\"Columns: {df.columns.tolist()}\")\n","  print(\"-\" * 20)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cWGkAiSVOeUT","executionInfo":{"status":"ok","timestamp":1745706681058,"user_tz":240,"elapsed":50,"user":{"displayName":"Brian Lerner","userId":"16362064343865306362"}},"outputId":"f67099a5-4130-40a0-fa47-c65dc879b5ec"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["DataFrame Name: df_sofa\n","Shape: (8215784, 29)\n","Columns: ['stay_id', 'hr', 'starttime', 'endtime', 'pao2fio2ratio_novent', 'pao2fio2ratio_vent', 'rate_epinephrine', 'rate_norepinephrine', 'rate_dopamine', 'rate_dobutamine', 'meanbp_min', 'gcs_min', 'uo_24hr', 'bilirubin_max', 'creatinine_max', 'platelet_min', 'respiration', 'coagulation', 'liver', 'cardiovascular', 'cns', 'renal', 'respiration_24hours', 'coagulation_24hours', 'liver_24hours', 'cardiovascular_24hours', 'cns_24hours', 'renal_24hours', 'sofa_24hours']\n","--------------------\n","DataFrame Name: df_sepsis3\n","Shape: (32899, 14)\n","Columns: ['subject_id', 'stay_id', 'antibiotic_time', 'culture_time', 'suspected_infection_time', 'sofa_time', 'sofa_score', 'respiration', 'coagulation', 'liver', 'cardiovascular', 'cns', 'renal', 'sepsis3']\n","--------------------\n","DataFrame Name: df_age\n","Shape: (546028, 6)\n","Columns: ['subject_id', 'hadm_id', 'admittime', 'anchor_age', 'anchor_year', 'age']\n","--------------------\n","DataFrame Name: df_charlson\n","Shape: (546028, 21)\n","Columns: ['subject_id', 'hadm_id', 'age_score', 'myocardial_infarct', 'congestive_heart_failure', 'peripheral_vascular_disease', 'cerebrovascular_disease', 'dementia', 'chronic_pulmonary_disease', 'rheumatic_disease', 'peptic_ulcer_disease', 'mild_liver_disease', 'diabetes_without_cc', 'diabetes_with_cc', 'paraplegia', 'renal_disease', 'malignant_cancer', 'severe_liver_disease', 'metastatic_solid_tumor', 'aids', 'charlson_comorbidity_index']\n","--------------------\n","DataFrame Name: df_patients\n","Shape: (364627, 6)\n","Columns: ['subject_id', 'gender', 'anchor_age', 'anchor_year', 'anchor_year_group', 'dod']\n","--------------------\n","DataFrame Name: df_admissions\n","Shape: (546028, 16)\n","Columns: ['subject_id', 'hadm_id', 'admittime', 'dischtime', 'deathtime', 'admission_type', 'admit_provider_id', 'admission_location', 'discharge_location', 'insurance', 'language', 'marital_status', 'race', 'edregtime', 'edouttime', 'hospital_expire_flag']\n","--------------------\n"]}]},{"cell_type":"code","source":["for df_name, df in data_dict.items():\n","  for col in df.columns:\n","    if 'time' in col.lower():\n","      try:\n","        df[col] = pd.to_datetime(df[col])\n","        print(f\"Converted '{col}' in '{df_name}' to datetime.\")\n","      except (ValueError, TypeError) as e:\n","        print(f\"Error converting '{col}' in '{df_name}' to datetime: {e}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ngWi0g6xQvBz","executionInfo":{"status":"ok","timestamp":1745707307130,"user_tz":240,"elapsed":6357,"user":{"displayName":"Brian Lerner","userId":"16362064343865306362"}},"outputId":"480d743b-54ef-4a3c-f8ec-de5954455a39"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Converted 'starttime' in 'df_sofa' to datetime.\n","Converted 'endtime' in 'df_sofa' to datetime.\n","Converted 'antibiotic_time' in 'df_sepsis3' to datetime.\n","Converted 'culture_time' in 'df_sepsis3' to datetime.\n","Converted 'suspected_infection_time' in 'df_sepsis3' to datetime.\n","Converted 'sofa_time' in 'df_sepsis3' to datetime.\n","Converted 'admittime' in 'df_age' to datetime.\n","Converted 'admittime' in 'df_admissions' to datetime.\n","Converted 'dischtime' in 'df_admissions' to datetime.\n","Converted 'deathtime' in 'df_admissions' to datetime.\n","Converted 'edregtime' in 'df_admissions' to datetime.\n","Converted 'edouttime' in 'df_admissions' to datetime.\n"]}]},{"cell_type":"code","source":["df_sofa = data_dict[\"df_sofa\"]\n","df_admissions = data_dict[\"df_admissions\"]\n","df_patients = data_dict[\"df_patients\"]\n","df_charlson = data_dict[\"df_charlson\"]\n","df_sepsis3 = data_dict[\"df_sepsis3\"]\n","df_age = data_dict[\"df_age\"]"],"metadata":{"id":"Rgsu6GJrOlfO","executionInfo":{"status":"ok","timestamp":1745707317611,"user_tz":240,"elapsed":4,"user":{"displayName":"Brian Lerner","userId":"16362064343865306362"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# prompt: I want to know the distribution of the number of times that stay_id occur in the rows of df_sofa\n","\n","stay_id_counts = df_sofa['stay_id'].value_counts()\n","print(stay_id_counts)\n","print(stay_id_counts.describe())\n","# or plot a histogram for better visualization\n","import matplotlib.pyplot as plt\n","plt.hist(stay_id_counts, bins=50)  # Adjust bins as needed\n","plt.xlabel('Number of Occurrences')\n","plt.ylabel('Number of stay_id')\n","plt.title('Distribution of stay_id Occurrences')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":854},"id":"HjgqeZF5P9_w","executionInfo":{"status":"ok","timestamp":1745707198192,"user_tz":240,"elapsed":415,"user":{"displayName":"Brian Lerner","userId":"16362064343865306362"}},"outputId":"ee936df4-b918-4260-a7f2-41cabaa9d1eb"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["stay_id\n","34773087    8904\n","30586760    8853\n","36032605    5433\n","39510663    3977\n","36307509    3832\n","            ... \n","34425152       1\n","32118091       1\n","32453224       1\n","37839785       1\n","30650802       1\n","Name: count, Length: 94437, dtype: int64\n","count    94437.000000\n","mean        86.997512\n","std        136.171514\n","min          1.000000\n","25%         25.000000\n","50%         47.000000\n","75%         93.000000\n","max       8904.000000\n","Name: count, dtype: float64\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# prompt: show me df_sofa for stay_id = 34773087\n","\n","# Assuming df_sofa is already loaded as shown in the previous code\n","# Display df_sofa for stay_id = 34773087\n","df_sofa_filtered = df_sofa[df_sofa['stay_id'] == 34773087]\n","df_sofa_filtered\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":791},"id":"1OFf1sUnQiZs","executionInfo":{"status":"ok","timestamp":1745707228804,"user_tz":240,"elapsed":252,"user":{"displayName":"Brian Lerner","userId":"16362064343865306362"}},"outputId":"df58c31c-b254-4654-aa5f-62673434dc3e"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          stay_id    hr            starttime              endtime  \\\n","120      34773087  6761  2180-10-11 16:00:00  2180-10-11 17:00:00   \n","790      34773087  2028  2180-03-28 11:00:00  2180-03-28 12:00:00   \n","3327     34773087  1678  2180-03-13 21:00:00  2180-03-13 22:00:00   \n","3435     34773087  7896  2180-11-27 23:00:00  2180-11-28 00:00:00   \n","4242     34773087  8635  2180-12-28 18:00:00  2180-12-28 19:00:00   \n","...           ...   ...                  ...                  ...   \n","8207572  34773087  1272  2180-02-25 23:00:00  2180-02-26 00:00:00   \n","8210551  34773087  8547  2180-12-25 02:00:00  2180-12-25 03:00:00   \n","8214295  34773087  1938  2180-03-24 17:00:00  2180-03-24 18:00:00   \n","8215183  34773087  5874  2180-09-04 17:00:00  2180-09-04 18:00:00   \n","8215690  34773087  2803  2180-04-29 18:00:00  2180-04-29 19:00:00   \n","\n","         pao2fio2ratio_novent  pao2fio2ratio_vent  rate_epinephrine  \\\n","120                       NaN                 NaN               NaN   \n","790                       NaN                 NaN               NaN   \n","3327                      NaN                 NaN               NaN   \n","3435                      NaN                 NaN               NaN   \n","4242                      NaN                 NaN               NaN   \n","...                       ...                 ...               ...   \n","8207572                   NaN                 NaN               NaN   \n","8210551                   NaN                 NaN               NaN   \n","8214295                   NaN                 NaN               NaN   \n","8215183                   NaN                 NaN               NaN   \n","8215690                   NaN                 NaN               NaN   \n","\n","         rate_norepinephrine  rate_dopamine  rate_dobutamine  ...  \\\n","120                      NaN            NaN              NaN  ...   \n","790                      NaN            NaN              NaN  ...   \n","3327                     NaN            NaN              NaN  ...   \n","3435                     NaN            NaN              NaN  ...   \n","4242                     NaN            NaN              NaN  ...   \n","...                      ...            ...              ...  ...   \n","8207572                  NaN            NaN              NaN  ...   \n","8210551                  NaN            NaN              NaN  ...   \n","8214295                  NaN            NaN              NaN  ...   \n","8215183                  NaN            NaN              NaN  ...   \n","8215690                  NaN            NaN              NaN  ...   \n","\n","         cardiovascular  cns  renal  respiration_24hours  coagulation_24hours  \\\n","120                 NaN  NaN    NaN                    0                    0   \n","790                 NaN  NaN    NaN                    0                    0   \n","3327                NaN  NaN    NaN                    0                    0   \n","3435                NaN  NaN    NaN                    0                    0   \n","4242                NaN  NaN    NaN                    0                    0   \n","...                 ...  ...    ...                  ...                  ...   \n","8207572             NaN  NaN    NaN                    0                    0   \n","8210551             NaN  NaN    NaN                    0                    0   \n","8214295             NaN  NaN    NaN                    0                    0   \n","8215183             NaN  NaN    NaN                    0                    0   \n","8215690             NaN  NaN    NaN                    0                    0   \n","\n","         liver_24hours  cardiovascular_24hours  cns_24hours  renal_24hours  \\\n","120                  0                       0            0              0   \n","790                  0                       0            0              0   \n","3327                 0                       0            0              0   \n","3435                 0                       0            0              0   \n","4242                 0                       0            0              0   \n","...                ...                     ...          ...            ...   \n","8207572              0                       0            0              0   \n","8210551              0                       0            0              0   \n","8214295              0                       0            0              0   \n","8215183              0                       0            0              0   \n","8215690              0                       0            0              0   \n","\n","         sofa_24hours  \n","120                 0  \n","790                 0  \n","3327                0  \n","3435                0  \n","4242                0  \n","...               ...  \n","8207572             0  \n","8210551             0  \n","8214295             0  \n","8215183             0  \n","8215690             0  \n","\n","[8904 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-64d17709-c488-4531-8d14-217e152c1176\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>stay_id</th>\n","      <th>hr</th>\n","      <th>starttime</th>\n","      <th>endtime</th>\n","      <th>pao2fio2ratio_novent</th>\n","      <th>pao2fio2ratio_vent</th>\n","      <th>rate_epinephrine</th>\n","      <th>rate_norepinephrine</th>\n","      <th>rate_dopamine</th>\n","      <th>rate_dobutamine</th>\n","      <th>...</th>\n","      <th>cardiovascular</th>\n","      <th>cns</th>\n","      <th>renal</th>\n","      <th>respiration_24hours</th>\n","      <th>coagulation_24hours</th>\n","      <th>liver_24hours</th>\n","      <th>cardiovascular_24hours</th>\n","      <th>cns_24hours</th>\n","      <th>renal_24hours</th>\n","      <th>sofa_24hours</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>120</th>\n","      <td>34773087</td>\n","      <td>6761</td>\n","      <td>2180-10-11 16:00:00</td>\n","      <td>2180-10-11 17:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>790</th>\n","      <td>34773087</td>\n","      <td>2028</td>\n","      <td>2180-03-28 11:00:00</td>\n","      <td>2180-03-28 12:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3327</th>\n","      <td>34773087</td>\n","      <td>1678</td>\n","      <td>2180-03-13 21:00:00</td>\n","      <td>2180-03-13 22:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3435</th>\n","      <td>34773087</td>\n","      <td>7896</td>\n","      <td>2180-11-27 23:00:00</td>\n","      <td>2180-11-28 00:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4242</th>\n","      <td>34773087</td>\n","      <td>8635</td>\n","      <td>2180-12-28 18:00:00</td>\n","      <td>2180-12-28 19:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8207572</th>\n","      <td>34773087</td>\n","      <td>1272</td>\n","      <td>2180-02-25 23:00:00</td>\n","      <td>2180-02-26 00:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8210551</th>\n","      <td>34773087</td>\n","      <td>8547</td>\n","      <td>2180-12-25 02:00:00</td>\n","      <td>2180-12-25 03:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8214295</th>\n","      <td>34773087</td>\n","      <td>1938</td>\n","      <td>2180-03-24 17:00:00</td>\n","      <td>2180-03-24 18:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8215183</th>\n","      <td>34773087</td>\n","      <td>5874</td>\n","      <td>2180-09-04 17:00:00</td>\n","      <td>2180-09-04 18:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8215690</th>\n","      <td>34773087</td>\n","      <td>2803</td>\n","      <td>2180-04-29 18:00:00</td>\n","      <td>2180-04-29 19:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8904 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64d17709-c488-4531-8d14-217e152c1176')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-64d17709-c488-4531-8d14-217e152c1176 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-64d17709-c488-4531-8d14-217e152c1176');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-53225ede-e8a0-480c-b65a-0411f3f71933\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-53225ede-e8a0-480c-b65a-0411f3f71933')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-53225ede-e8a0-480c-b65a-0411f3f71933 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_80e858ed-25c7-4ebe-ab2c-ee38d4252e57\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_sofa_filtered')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_80e858ed-25c7-4ebe-ab2c-ee38d4252e57 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_sofa_filtered');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_sofa_filtered"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df_admissions.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"FGeFx1E8RBfB","executionInfo":{"status":"ok","timestamp":1745707347233,"user_tz":240,"elapsed":81,"user":{"displayName":"Brian Lerner","userId":"16362064343865306362"}},"outputId":"31772f9e-5b86-42bf-edad-cdb36e1ae077"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id           admittime           dischtime deathtime  \\\n","0    10000032  22595853 2180-05-06 22:23:00 2180-05-07 17:15:00       NaT   \n","1    10000032  22841357 2180-06-26 18:27:00 2180-06-27 18:49:00       NaT   \n","2    10000032  25742920 2180-08-05 23:44:00 2180-08-07 17:50:00       NaT   \n","3    10000032  29079034 2180-07-23 12:35:00 2180-07-25 17:55:00       NaT   \n","4    10000068  25022803 2160-03-03 23:16:00 2160-03-04 06:26:00       NaT   \n","\n","   admission_type admit_provider_id      admission_location  \\\n","0          URGENT            P49AFC  TRANSFER FROM HOSPITAL   \n","1        EW EMER.            P784FA          EMERGENCY ROOM   \n","2        EW EMER.            P19UTS          EMERGENCY ROOM   \n","3        EW EMER.            P06OTX          EMERGENCY ROOM   \n","4  EU OBSERVATION            P39NWO          EMERGENCY ROOM   \n","\n","  discharge_location insurance language marital_status   race  \\\n","0               HOME  Medicaid  English        WIDOWED  WHITE   \n","1               HOME  Medicaid  English        WIDOWED  WHITE   \n","2            HOSPICE  Medicaid  English        WIDOWED  WHITE   \n","3               HOME  Medicaid  English        WIDOWED  WHITE   \n","4                NaN       NaN  English         SINGLE  WHITE   \n","\n","            edregtime           edouttime  hospital_expire_flag  \n","0 2180-05-06 19:17:00 2180-05-06 23:30:00                     0  \n","1 2180-06-26 15:54:00 2180-06-26 21:31:00                     0  \n","2 2180-08-05 20:58:00 2180-08-06 01:44:00                     0  \n","3 2180-07-23 05:54:00 2180-07-23 14:00:00                     0  \n","4 2160-03-03 21:55:00 2160-03-04 06:26:00                     0  "],"text/html":["\n","  <div id=\"df-aad83985-16fc-4c41-bd9d-f5c09187dd68\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>admittime</th>\n","      <th>dischtime</th>\n","      <th>deathtime</th>\n","      <th>admission_type</th>\n","      <th>admit_provider_id</th>\n","      <th>admission_location</th>\n","      <th>discharge_location</th>\n","      <th>insurance</th>\n","      <th>language</th>\n","      <th>marital_status</th>\n","      <th>race</th>\n","      <th>edregtime</th>\n","      <th>edouttime</th>\n","      <th>hospital_expire_flag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10000032</td>\n","      <td>22595853</td>\n","      <td>2180-05-06 22:23:00</td>\n","      <td>2180-05-07 17:15:00</td>\n","      <td>NaT</td>\n","      <td>URGENT</td>\n","      <td>P49AFC</td>\n","      <td>TRANSFER FROM HOSPITAL</td>\n","      <td>HOME</td>\n","      <td>Medicaid</td>\n","      <td>English</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-05-06 19:17:00</td>\n","      <td>2180-05-06 23:30:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10000032</td>\n","      <td>22841357</td>\n","      <td>2180-06-26 18:27:00</td>\n","      <td>2180-06-27 18:49:00</td>\n","      <td>NaT</td>\n","      <td>EW EMER.</td>\n","      <td>P784FA</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>HOME</td>\n","      <td>Medicaid</td>\n","      <td>English</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-06-26 15:54:00</td>\n","      <td>2180-06-26 21:31:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10000032</td>\n","      <td>25742920</td>\n","      <td>2180-08-05 23:44:00</td>\n","      <td>2180-08-07 17:50:00</td>\n","      <td>NaT</td>\n","      <td>EW EMER.</td>\n","      <td>P19UTS</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>HOSPICE</td>\n","      <td>Medicaid</td>\n","      <td>English</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-08-05 20:58:00</td>\n","      <td>2180-08-06 01:44:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10000032</td>\n","      <td>29079034</td>\n","      <td>2180-07-23 12:35:00</td>\n","      <td>2180-07-25 17:55:00</td>\n","      <td>NaT</td>\n","      <td>EW EMER.</td>\n","      <td>P06OTX</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>HOME</td>\n","      <td>Medicaid</td>\n","      <td>English</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-07-23 05:54:00</td>\n","      <td>2180-07-23 14:00:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10000068</td>\n","      <td>25022803</td>\n","      <td>2160-03-03 23:16:00</td>\n","      <td>2160-03-04 06:26:00</td>\n","      <td>NaT</td>\n","      <td>EU OBSERVATION</td>\n","      <td>P39NWO</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>English</td>\n","      <td>SINGLE</td>\n","      <td>WHITE</td>\n","      <td>2160-03-03 21:55:00</td>\n","      <td>2160-03-04 06:26:00</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aad83985-16fc-4c41-bd9d-f5c09187dd68')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-aad83985-16fc-4c41-bd9d-f5c09187dd68 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-aad83985-16fc-4c41-bd9d-f5c09187dd68');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-5efa35a5-bf82-4234-b854-af7a78951737\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5efa35a5-bf82-4234-b854-af7a78951737')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-5efa35a5-bf82-4234-b854-af7a78951737 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_admissions"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["df_admissions.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"KX143SlaRwYi","executionInfo":{"status":"ok","timestamp":1745707551670,"user_tz":240,"elapsed":42,"user":{"displayName":"Brian Lerner","userId":"16362064343865306362"}},"outputId":"43ef6561-2ef2-417c-cbbe-9594b04d943a"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   subject_id   hadm_id           admittime           dischtime deathtime  \\\n","0    10000032  22595853 2180-05-06 22:23:00 2180-05-07 17:15:00       NaT   \n","1    10000032  22841357 2180-06-26 18:27:00 2180-06-27 18:49:00       NaT   \n","2    10000032  25742920 2180-08-05 23:44:00 2180-08-07 17:50:00       NaT   \n","3    10000032  29079034 2180-07-23 12:35:00 2180-07-25 17:55:00       NaT   \n","4    10000068  25022803 2160-03-03 23:16:00 2160-03-04 06:26:00       NaT   \n","\n","   admission_type admit_provider_id      admission_location  \\\n","0          URGENT            P49AFC  TRANSFER FROM HOSPITAL   \n","1        EW EMER.            P784FA          EMERGENCY ROOM   \n","2        EW EMER.            P19UTS          EMERGENCY ROOM   \n","3        EW EMER.            P06OTX          EMERGENCY ROOM   \n","4  EU OBSERVATION            P39NWO          EMERGENCY ROOM   \n","\n","  discharge_location insurance language marital_status   race  \\\n","0               HOME  Medicaid  English        WIDOWED  WHITE   \n","1               HOME  Medicaid  English        WIDOWED  WHITE   \n","2            HOSPICE  Medicaid  English        WIDOWED  WHITE   \n","3               HOME  Medicaid  English        WIDOWED  WHITE   \n","4                NaN       NaN  English         SINGLE  WHITE   \n","\n","            edregtime           edouttime  hospital_expire_flag  \n","0 2180-05-06 19:17:00 2180-05-06 23:30:00                     0  \n","1 2180-06-26 15:54:00 2180-06-26 21:31:00                     0  \n","2 2180-08-05 20:58:00 2180-08-06 01:44:00                     0  \n","3 2180-07-23 05:54:00 2180-07-23 14:00:00                     0  \n","4 2160-03-03 21:55:00 2160-03-04 06:26:00                     0  "],"text/html":["\n","  <div id=\"df-d6c260fe-5908-4104-9fbb-397e38109caa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject_id</th>\n","      <th>hadm_id</th>\n","      <th>admittime</th>\n","      <th>dischtime</th>\n","      <th>deathtime</th>\n","      <th>admission_type</th>\n","      <th>admit_provider_id</th>\n","      <th>admission_location</th>\n","      <th>discharge_location</th>\n","      <th>insurance</th>\n","      <th>language</th>\n","      <th>marital_status</th>\n","      <th>race</th>\n","      <th>edregtime</th>\n","      <th>edouttime</th>\n","      <th>hospital_expire_flag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10000032</td>\n","      <td>22595853</td>\n","      <td>2180-05-06 22:23:00</td>\n","      <td>2180-05-07 17:15:00</td>\n","      <td>NaT</td>\n","      <td>URGENT</td>\n","      <td>P49AFC</td>\n","      <td>TRANSFER FROM HOSPITAL</td>\n","      <td>HOME</td>\n","      <td>Medicaid</td>\n","      <td>English</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-05-06 19:17:00</td>\n","      <td>2180-05-06 23:30:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10000032</td>\n","      <td>22841357</td>\n","      <td>2180-06-26 18:27:00</td>\n","      <td>2180-06-27 18:49:00</td>\n","      <td>NaT</td>\n","      <td>EW EMER.</td>\n","      <td>P784FA</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>HOME</td>\n","      <td>Medicaid</td>\n","      <td>English</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-06-26 15:54:00</td>\n","      <td>2180-06-26 21:31:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10000032</td>\n","      <td>25742920</td>\n","      <td>2180-08-05 23:44:00</td>\n","      <td>2180-08-07 17:50:00</td>\n","      <td>NaT</td>\n","      <td>EW EMER.</td>\n","      <td>P19UTS</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>HOSPICE</td>\n","      <td>Medicaid</td>\n","      <td>English</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-08-05 20:58:00</td>\n","      <td>2180-08-06 01:44:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10000032</td>\n","      <td>29079034</td>\n","      <td>2180-07-23 12:35:00</td>\n","      <td>2180-07-25 17:55:00</td>\n","      <td>NaT</td>\n","      <td>EW EMER.</td>\n","      <td>P06OTX</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>HOME</td>\n","      <td>Medicaid</td>\n","      <td>English</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2180-07-23 05:54:00</td>\n","      <td>2180-07-23 14:00:00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10000068</td>\n","      <td>25022803</td>\n","      <td>2160-03-03 23:16:00</td>\n","      <td>2160-03-04 06:26:00</td>\n","      <td>NaT</td>\n","      <td>EU OBSERVATION</td>\n","      <td>P39NWO</td>\n","      <td>EMERGENCY ROOM</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>English</td>\n","      <td>SINGLE</td>\n","      <td>WHITE</td>\n","      <td>2160-03-03 21:55:00</td>\n","      <td>2160-03-04 06:26:00</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d6c260fe-5908-4104-9fbb-397e38109caa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d6c260fe-5908-4104-9fbb-397e38109caa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d6c260fe-5908-4104-9fbb-397e38109caa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-2aedbda2-47b8-4cea-82e0-e5c8c158f157\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2aedbda2-47b8-4cea-82e0-e5c8c158f157')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-2aedbda2-47b8-4cea-82e0-e5c8c158f157 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_admissions"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["df_sofa.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":429},"id":"Bydhtq6UR57l","executionInfo":{"status":"ok","timestamp":1745707580803,"user_tz":240,"elapsed":42,"user":{"displayName":"Brian Lerner","userId":"16362064343865306362"}},"outputId":"7b8aa5ff-f19c-42c2-f599-a1a0491519c8"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    stay_id   hr           starttime             endtime  \\\n","0  34038447  234 2150-02-18 06:00:00 2150-02-18 07:00:00   \n","1  31592197  309 2183-06-13 22:00:00 2183-06-13 23:00:00   \n","2  33793021   12 2145-11-18 04:00:00 2145-11-18 05:00:00   \n","3  37879014  104 2178-01-29 05:00:00 2178-01-29 06:00:00   \n","4  39383761   10 2166-10-06 03:00:00 2166-10-06 04:00:00   \n","\n","   pao2fio2ratio_novent  pao2fio2ratio_vent  rate_epinephrine  \\\n","0                   NaN                 NaN               NaN   \n","1                   NaN                 NaN               NaN   \n","2                   NaN                 NaN               NaN   \n","3                   NaN                 NaN               NaN   \n","4                   NaN               220.0               NaN   \n","\n","   rate_norepinephrine  rate_dopamine  rate_dobutamine  ...  cardiovascular  \\\n","0             0.090343            NaN              NaN  ...             3.0   \n","1                  NaN            NaN              NaN  ...             0.0   \n","2                  NaN            NaN              NaN  ...             1.0   \n","3                  NaN            NaN              NaN  ...             NaN   \n","4                  NaN            NaN              NaN  ...             1.0   \n","\n","   cns  renal  respiration_24hours  coagulation_24hours  liver_24hours  \\\n","0  NaN    NaN                    3                    2              0   \n","1  NaN    0.0                    0                    3              0   \n","2  NaN    NaN                    3                    2              0   \n","3  NaN    NaN                    0                    0              0   \n","4  0.0    NaN                    2                    0              0   \n","\n","   cardiovascular_24hours  cns_24hours  renal_24hours  sofa_24hours  \n","0                       4            0              2            11  \n","1                       0            0              0             3  \n","2                       1            1              1             8  \n","3                       0            0              0             0  \n","4                       1            4              0             7  \n","\n","[5 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-84f198bc-9a11-4c38-99dc-7b8a987f2655\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>stay_id</th>\n","      <th>hr</th>\n","      <th>starttime</th>\n","      <th>endtime</th>\n","      <th>pao2fio2ratio_novent</th>\n","      <th>pao2fio2ratio_vent</th>\n","      <th>rate_epinephrine</th>\n","      <th>rate_norepinephrine</th>\n","      <th>rate_dopamine</th>\n","      <th>rate_dobutamine</th>\n","      <th>...</th>\n","      <th>cardiovascular</th>\n","      <th>cns</th>\n","      <th>renal</th>\n","      <th>respiration_24hours</th>\n","      <th>coagulation_24hours</th>\n","      <th>liver_24hours</th>\n","      <th>cardiovascular_24hours</th>\n","      <th>cns_24hours</th>\n","      <th>renal_24hours</th>\n","      <th>sofa_24hours</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>34038447</td>\n","      <td>234</td>\n","      <td>2150-02-18 06:00:00</td>\n","      <td>2150-02-18 07:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.090343</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>31592197</td>\n","      <td>309</td>\n","      <td>2183-06-13 22:00:00</td>\n","      <td>2183-06-13 23:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>33793021</td>\n","      <td>12</td>\n","      <td>2145-11-18 04:00:00</td>\n","      <td>2145-11-18 05:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>37879014</td>\n","      <td>104</td>\n","      <td>2178-01-29 05:00:00</td>\n","      <td>2178-01-29 06:00:00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>39383761</td>\n","      <td>10</td>\n","      <td>2166-10-06 03:00:00</td>\n","      <td>2166-10-06 04:00:00</td>\n","      <td>NaN</td>\n","      <td>220.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84f198bc-9a11-4c38-99dc-7b8a987f2655')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-84f198bc-9a11-4c38-99dc-7b8a987f2655 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-84f198bc-9a11-4c38-99dc-7b8a987f2655');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-0b525112-a7ca-41db-ae78-41bd0b3280c0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0b525112-a7ca-41db-ae78-41bd0b3280c0')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-0b525112-a7ca-41db-ae78-41bd0b3280c0 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_sofa"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":[],"metadata":{"id":"mjrdg9ogRFL1"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"1p6q5-zdW9GXLhweWRA4dNQlvsYoU1PUP","timestamp":1745693732758}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}